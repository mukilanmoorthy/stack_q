"use strict";(self.webpackChunkyour_docs=self.webpackChunkyour_docs||[]).push([[769],{2417:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>d,contentTitle:()=>l,default:()=>h,frontMatter:()=>a,metadata:()=>t,toc:()=>o});const t=JSON.parse('{"id":"state-management","title":"\u2699\ufe0f State Management with React Query","description":"Stackquae uses React Query (from @tanstack/react-query) to manage communication with Supabase, including:","source":"@site/docs/state-management.md","sourceDirName":".","slug":"/state-management","permalink":"/stack_q/docs/state-management","draft":false,"unlisted":false,"editUrl":"https://github.com/mukilanmoorthy/stack_q/edit/main/your-docs/docs/docs/state-management.md","tags":[],"version":"current","sidebarPosition":5,"frontMatter":{"sidebar_position":5,"sidebar_label":"State Management"},"sidebar":"tutorialSidebar","previous":{"title":"UI Components","permalink":"/stack_q/docs/components"},"next":{"title":"Theme & Toasts","permalink":"/stack_q/docs/theming-toast"}}');var s=r(4848),i=r(8453);const a={sidebar_position:5,sidebar_label:"State Management"},l="\u2699\ufe0f State Management with React Query",d={},o=[{value:"\ud83e\udd14 Why React Query?",id:"-why-react-query",level:2},{value:"\ud83d\udd0d Example: Fetch All Blog Posts",id:"-example-fetch-all-blog-posts",level:2},{value:"\u2705 What this does:",id:"-what-this-does",level:3},{value:"\u270d\ufe0f Example: Add a New Blog Post (Mutation)",id:"\ufe0f-example-add-a-new-blog-post-mutation",level:2},{value:"\ud83d\udd01 Why <code>invalidateQueries()</code>?",id:"-why-invalidatequeries",level:3},{value:"\ud83d\udc64 Example: Fetch Logged-in User Profile",id:"-example-fetch-logged-in-user-profile",level:2},{value:"\ud83e\uddfc How to Set Up React Query",id:"-how-to-set-up-react-query",level:2},{value:"\u2705 Summary",id:"-summary",level:2}];function c(e){const n={blockquote:"blockquote",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",hr:"hr",li:"li",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,i.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.header,{children:(0,s.jsx)(n.h1,{id:"\ufe0f-state-management-with-react-query",children:"\u2699\ufe0f State Management with React Query"})}),"\n",(0,s.jsxs)(n.p,{children:["Stackquae uses ",(0,s.jsx)(n.strong,{children:"React Query"})," (from ",(0,s.jsx)(n.code,{children:"@tanstack/react-query"}),") to manage communication with ",(0,s.jsx)(n.strong,{children:"Supabase"}),", including:"]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"\ud83d\udcdd Fetching blog posts"}),"\n",(0,s.jsx)(n.li,{children:"\ud83d\udcbe Saving new posts"}),"\n",(0,s.jsx)(n.li,{children:"\ud83d\udc64 Updating user profiles"}),"\n",(0,s.jsx)(n.li,{children:"\ud83d\udd04 Handling loading and error states"}),"\n"]}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h2,{id:"-why-react-query",children:"\ud83e\udd14 Why React Query?"}),"\n",(0,s.jsxs)(n.p,{children:["Instead of manually using ",(0,s.jsx)(n.code,{children:"useState"}),", ",(0,s.jsx)(n.code,{children:"useEffect"}),", and ",(0,s.jsx)(n.code,{children:"fetch()"}),", React Query simplifies state management with:"]}),"\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:"\ud83d\udee0 Feature"}),(0,s.jsx)(n.th,{children:"\ud83d\ude80 Benefit"})]})}),(0,s.jsxs)(n.tbody,{children:[(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"\u2705 Auto Caching"}),(0,s.jsx)(n.td,{children:"Stores responses in memory (no repeated fetches)"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"\ud83d\udd01 Background Sync"}),(0,s.jsx)(n.td,{children:"Keeps data fresh when user refocuses window"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"\u23f3 Loading/Error State"}),(0,s.jsx)(n.td,{children:"Built-in support for UI feedback"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"\u26a1 Mutations"}),(0,s.jsx)(n.td,{children:"Built-in support for saving/updating/deleting data"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"\ud83d\udd04 Refetching"}),(0,s.jsx)(n.td,{children:"Easily re-fetch data when changes are made"})]})]})]}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h2,{id:"-example-fetch-all-blog-posts",children:"\ud83d\udd0d Example: Fetch All Blog Posts"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-js",children:'import { useQuery } from "@tanstack/react-query";\r\nimport { supabase } from "@/lib/supabase";\r\n\r\nconst getAllBlogs = async () => {\r\n  const { data, error } = await supabase\r\n    .from("posts")\r\n    .select("*")\r\n    .order("created_at", { ascending: false });\r\n\r\n  if (error) throw error;\r\n  return data;\r\n};\r\n\r\nconst { data: blogs, isLoading, isError } = useQuery({\r\n  queryKey: ["blogs"],\r\n  queryFn: getAllBlogs,\r\n});\n'})}),"\n",(0,s.jsx)(n.h3,{id:"-what-this-does",children:"\u2705 What this does:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["Caches blogs under ",(0,s.jsx)(n.code,{children:'["blogs"]'})]}),"\n",(0,s.jsxs)(n.li,{children:["Shows ",(0,s.jsx)(n.code,{children:"isLoading"})," while fetching"]}),"\n",(0,s.jsxs)(n.li,{children:["Shows ",(0,s.jsx)(n.code,{children:"isError"})," if failed"]}),"\n",(0,s.jsx)(n.li,{children:"Auto-refreshes on refocus or re-mount"}),"\n"]}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h2,{id:"\ufe0f-example-add-a-new-blog-post-mutation",children:"\u270d\ufe0f Example: Add a New Blog Post (Mutation)"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-js",children:'import { useMutation, useQueryClient } from "@tanstack/react-query";\r\n\r\nconst addBlog = async (newPost) => {\r\n  const { data, error } = await supabase.from("posts").insert([newPost]);\r\n  if (error) throw error;\r\n  return data;\r\n};\r\n\r\nconst queryClient = useQueryClient();\r\n\r\nconst { mutate: createBlog, isPending } = useMutation({\r\n  mutationFn: addBlog,\r\n  onSuccess: () => {\r\n    queryClient.invalidateQueries({ queryKey: ["blogs"] });\r\n  },\r\n});\n'})}),"\n",(0,s.jsxs)(n.h3,{id:"-why-invalidatequeries",children:["\ud83d\udd01 Why ",(0,s.jsx)(n.code,{children:"invalidateQueries()"}),"?"]}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsx)(n.p,{children:"It tells React Query: \u201cRe-fetch the blog list \u2014 we just added a new one!\u201d"}),"\n"]}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h2,{id:"-example-fetch-logged-in-user-profile",children:"\ud83d\udc64 Example: Fetch Logged-in User Profile"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-js",children:'const getProfile = async (uid) => {\r\n  const { data, error } = await supabase\r\n    .from("profiles")\r\n    .select("*")\r\n    .eq("id", uid)\r\n    .single();\r\n\r\n  if (error) throw error;\r\n  return data;\r\n};\r\n\r\nconst { data: profile, isLoading } = useQuery({\r\n  queryKey: ["profile", uid],\r\n  queryFn: () => getProfile(uid),\r\n});\n'})}),"\n",(0,s.jsx)(n.p,{children:"\u2705 This ensures:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Each user's profile is uniquely cached (using UID)"}),"\n",(0,s.jsx)(n.li,{children:"React Query refreshes automatically if UID changes (login/logout)"}),"\n"]}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h2,{id:"-how-to-set-up-react-query",children:"\ud83e\uddfc How to Set Up React Query"}),"\n",(0,s.jsxs)(n.p,{children:["In your ",(0,s.jsx)(n.code,{children:"App.jsx"})," or main file:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-jsx",children:'import { QueryClient, QueryClientProvider } from "@tanstack/react-query";\r\n\r\nconst queryClient = new QueryClient();\r\n\r\n<QueryClientProvider client={queryClient}>\r\n  <App />\r\n</QueryClientProvider>\n'})}),"\n",(0,s.jsxs)(n.p,{children:["Now, ",(0,s.jsx)(n.code,{children:"useQuery"})," and ",(0,s.jsx)(n.code,{children:"useMutation"})," can be used in any component in your app."]}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h2,{id:"-summary",children:"\u2705 Summary"}),"\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:"\ud83e\udde9 Task"}),(0,s.jsx)(n.th,{children:"\ud83e\udde0 What React Query Does"})]})}),(0,s.jsxs)(n.tbody,{children:[(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"Fetch blog posts"}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:'useQuery(["blogs"])'})})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"Add a new post"}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"useMutation({ mutationFn })"})})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"Update profile info"}),(0,s.jsxs)(n.td,{children:[(0,s.jsx)(n.code,{children:"useMutation"})," + ",(0,s.jsx)(n.code,{children:"invalidateQueries()"})]})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"Cache data"}),(0,s.jsx)(n.td,{children:"Automatically (memory + stale-time)"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"Show loading/errors"}),(0,s.jsxs)(n.td,{children:["Built-in ",(0,s.jsx)(n.code,{children:"isLoading"}),", ",(0,s.jsx)(n.code,{children:"isError"})]})]})]})]}),"\n",(0,s.jsx)(n.hr,{})]})}function h(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(c,{...e})}):c(e)}},8453:(e,n,r)=>{r.d(n,{R:()=>a,x:()=>l});var t=r(6540);const s={},i=t.createContext(s);function a(e){const n=t.useContext(i);return t.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:a(e.components),t.createElement(i.Provider,{value:n},e.children)}}}]);